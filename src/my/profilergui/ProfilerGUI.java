/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package my.profilergui;

//import com.mongodb.DBCursor;
import com.mongodb.MongoClient;
//import com.mongodb.MongoException;
//import java.awt.BorderLayout;
//import java.awt.Component;
//import java.awt.Dimension;
//import java.awt.Frame;
//import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Collections;
//import java.io.IOException;
//import java.net.UnknownHostException;
//import java.text.DateFormat;
//import java.text.SimpleDateFormat;
//import java.util.Arrays;
//import java.util.Date;
import java.util.List;
//import java.util.Vector;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.DefaultListModel;
//import javax.swing.ImageIcon;
//import javax.swing.JFrame;
//import javax.swing.JList;
import javax.swing.JOptionPane;
//import javax.swing.JScrollPane;
//import javax.swing.JTable;
//import javax.xml.parsers.DocumentBuilder;
//import javax.xml.parsers.DocumentBuilderFactory;
//import org.json.JSONException;
//import org.w3c.dom.Document;
//import org.xml.sax.SAXException;


/**
 *
 * @author UKANCDE
 */
public class ProfilerGUI extends javax.swing.JFrame {

    /**
     * Creates new form ProfilerGUI
     */
    
    public ProfilerGUI() {
        initComponents();
        jPasswordField1.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField6 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        jTextField6.setText("1qaz2wsx@");
        jTextField6.setEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MongoDB Profiler");
        setPreferredSize(new java.awt.Dimension(650, 725));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Profiler Controls"));

        jLabel5.setText("Session Name");

        jTextField4.setEnabled(false);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton1.setText("Start");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Stop");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setEnabled(false);
        jButton4.setLabel("View Report");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Pause");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 31, Short.MAX_VALUE))))
        );

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Profiler Settings"));

        jLabel3.setText("Profile Level");

        jLabel4.setText("Slowness");
        jLabel4.setEnabled(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2", "1" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField3.setEnabled(false);

        jLabel6.setText("DB Name");

        jList1.setEnabled(false);
        jList1.setSelectedIndex(0);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton7.setText("Set Values");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jButton7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Server Details"));

        jLabel1.setText("IP Address");

        jLabel2.setText("Port No");

        jTextField2.setText("27017");
        jTextField2.setMinimumSize(new java.awt.Dimension(50, 20));

        jButton6.setText("Connect");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Authentication ON");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel7.setText("UserName");

        jTextField5.setEnabled(false);

        jLabel8.setText("Password");

        jPasswordField1.setEnabled(false);
        jPasswordField1.setPreferredSize(new java.awt.Dimension(65, 25));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addComponent(jCheckBox1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6))
        );

        jLabel1.getAccessibleContext().setAccessibleName("jPanel3");
        jLabel1.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     
        int NoOfDBs = dbList.size();
         String ProfileLevel = Integer.toString(profilerLevel);
         String slow = "100";
         slow = Integer.toString(slowness);
        
        for(int i = 0 ; i < NoOfDBs ; i++)
        {
          if (profilerLevel == 2 )
          {
           profile.StartProfiler(mongo,dbList.get(i) ,ProfileLevel );
          
          }
         else
             profile.StartProfiler(mongo,dbList.get(i) ,ProfileLevel,slow );
            
        }

        
        jButton2.setEnabled(true);
        jButton5.setEnabled(true);
        jButton1.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jComboBox1.setEnabled(false);
        jList1.setEnabled(false);
        jTextField1.setEnabled(false);
        jTextField2.setEnabled(false);
        jTextField3.setEnabled(false);
        jTextField4.setEnabled(false);
        jTextField5.setEnabled(false);
        jTextField6.setEnabled(false);
        jPasswordField1.setEnabled(false);
        isRunning = true ;
        
        
        
                        
             
    
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (isRunning == true)
            JOptionPane.showMessageDialog(null, "Mongodb profiler is running. Please stopt it & continue you task again !", "Mongodb Profile is running ",JOptionPane.INFORMATION_MESSAGE);
        else if ( mongo != null)
        {
            profile.CloseConnection(mongo);  
            System.exit(0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int NoOfDBs = dbList.size();

        String name = "";
        String traceFileList="";
        name  = jTextField4.getText().toString();
        if (name.isEmpty())
                {
                    name = profile.getDateTime();
                }
        else
        {
         for(int i = 0 ; i < NoOfDBs ; i++)
            {
              profile.StopProfiler(mongo, dbList.get(i),dbList.get(i)+"_"+ name);
              
              traceFileList= traceFileList+("\n  "+dbList.get(i)+"_"+ name);
            }
         JOptionPane.showMessageDialog(null, "Trace File(s) List : <DB Name>_profile_xxxx "+traceFileList, "Trace Files",JOptionPane.INFORMATION_MESSAGE);
            
        }
        
        jButton2.setEnabled(false);
        jButton5.setEnabled(false);
        jButton1.setEnabled(true);
        jButton6.setEnabled(false);
        jButton7.setEnabled(true);
        jComboBox1.setEnabled(true);
        jList1.setEnabled(true);
        jTextField1.setEnabled(false);
        jTextField2.setEnabled(false);
        jTextField5.setEnabled(false);
        jTextField6.setEnabled(false);
        jPasswordField1.setEnabled(false);
        jTextField4.setEnabled(true);

          String dte = "profile_" +profile.getDateTime();
          jTextField4.setText(dte);
          isRunning = false;
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         String serverIP ="localhost";
         
         
         int serverPort = 27017;
         String uname =jTextField5.getText().toString();
         //String pwd = jTextField6.getText().toString();
         char [] pwd1 = jPasswordField1.getPassword();
         String pwd = String.valueOf(pwd1);
         //String db = "admin";  // need admin rights for this
         List <String> list = null;
         final DefaultListModel model = new DefaultListModel();
         
     //    try{
            serverPort = Integer.parseInt(jTextField2.getText().toString());
            serverIP = jTextField1.getText();
          if (jCheckBox1.isSelected())
         {
             mongo = profile.OpenMongoDBConnection(serverIP, serverPort, uname, pwd, DefaultDB);
             isAuth = true;
             IPAddress  = serverIP;
             PortNo = serverPort;
             UserName = uname;
             Password = pwd;
         }
         else
         {
                 mongo = profile.OpenMongoDBConnection(serverIP, serverPort);
             isAuth = false;
             IPAddress  = serverIP;
             PortNo = serverPort;
             UserName = "";
             Password = "";
                
         }
         
                try {

                   if (mongo != null)
                   {
                       list = profile.GetDatabaseList(mongo);
                       for (int i = 0, n = list.size(); i < n; i++) {
                       model.addElement(list.get(i));
                   }

                   }
                } 
                catch ( Exception ex)
                {
                    log.LogWriteToTextFile(ex.toString());

                }
                if(list.isEmpty() == false)
                {
                       //Collections.sort(list);
                       jList1.setModel(model);
                       jList1.setVisibleRowCount(7);
                       jButton7.setEnabled(true);
                       jList1.setEnabled(true);
                       jComboBox1.setEnabled(true);
                       jButton4.setEnabled(true);

                       dbs = list;

                }


         
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String btn = jButton5.getText().toString();
        int NoOfDBs = dbList.size();
         String ProfileLevel = Integer.toString(profilerLevel);
         String slow = "100";
         slow = Integer.toString(slowness);
        
        if (btn == "Pause")
        {
            
            for(int i = 0 ; i < NoOfDBs ; i++)
            {
                   profile.PauseProfiler(mongo,dbList.get(i));
            }
            
            jButton5.setText("Continue");
            
            
        }else
        {
            for(int i = 0 ; i < NoOfDBs ; i++)
           {
             if (profilerLevel == 2 )
             {
              profile.StartProfiler(mongo,dbList.get(i) ,ProfileLevel );
              //profile.isProfilerRunning(mongo, dbList.get(i));
             }
            else
                profile.StartProfiler(mongo,dbList.get(i) ,ProfileLevel,slow );

           }
            jButton5.setText("Pause");
        }
        
        jButton5.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex() == 1 )
        {
        jTextField3.setEnabled(true);
        jLabel4.setEnabled(true);
        profilerLevel = 1 ;
        
        
        }
        else {
                    jTextField3.setEnabled(false);
                    jLabel4.setEnabled(false);
                    profilerLevel = 2 ;
        }
        

            
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        jTextField3.setEditable(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jList1ValueChanged

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        dbList = jList1.getSelectedValuesList();
        
        if(dbList.size() == 0)
        {
            JOptionPane.showMessageDialog(null, "No database is selected", "Error",JOptionPane.ERROR_MESSAGE);
        }else
        {
                String plevel = "";
                plevel = Integer.toString(profilerLevel);

                if (profilerLevel == 1)
                {
                    try{
                    slowness = Integer.parseInt(jTextField3.getText());
                    }
                    catch(Exception e)
                    {
                        log.LogWriteToTextFile(e.toString());
                        JOptionPane.showMessageDialog(null, "Invalid slowness value. It should be Integer value- check and re-try", "Error",JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                else
                {
                    slowness = 0;
                }


                String dblist = " Selected DB(s) : ";
                 for (int i = 0 ; i < dbList.size() ; i++)
                 {
                     dblist = dblist + dbList.get(i) + " , ";
                 }

                 if (profilerLevel == 1)
                    dblist = dblist +" Profiling Level : " + plevel +" and Slowness : " + slowness;
                 else
                     dblist = dblist +" Profiling Level is " + plevel ;

                 int NoOfDBs = dbList.size();
                 int isProfilerRunning =  -1;
                 int noOfProfilers = 0;
                 String dbPrfiler = "Mongo Profiler is running on : ";
                 int reply1 = -1;
                 int reply2 = -1;
                 String dt ="";

                 int reply =  JOptionPane.showConfirmDialog(null, dblist, "Please Confirm Profiler Settings",2  , 2);

                 if (reply == JOptionPane.OK_OPTION){
                     for(int i = 0 ; i < NoOfDBs ; i++)
                     {
                         isProfilerRunning = profile.isProfilerRunning(mongo, dbList.get(i));
                         if (isProfilerRunning == 1 || isProfilerRunning == 2){

                             dbPrfiler = dbPrfiler + dbList.get(i) + " , ";
                             noOfProfilers ++;

                         }

                     }
                     if (noOfProfilers > 0 ){
                         reply1 = JOptionPane.showConfirmDialog(null, dbPrfiler +" Do you want to stop Profiler now ? " , " Proflier alrady running !!!! ", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                         if (reply1 == JOptionPane.YES_OPTION)
                         {
                             dt = profile.getDateTime();
                             for(int i = 0 ; i < NoOfDBs ; i++)
                             {
                                 profile.StopProfiler(mongo, dbList.get(i),dt );
                             }


                         }else if (reply1 == JOptionPane.NO_OPTION)
                         {
                             reply2 = JOptionPane.showConfirmDialog(null, " You need stop Profiler manually before start the Application " , " Proflier alrady running !!!! ", JOptionPane.CLOSED_OPTION, JOptionPane.WARNING_MESSAGE);
                             if (reply2 == JOptionPane.OK_OPTION){
                                 profile.CloseConnection(mongo);
                                 System.exit(0);
                             }
                             }
                         }





                 }


                 jButton1.setEnabled(true);
                 jTextField4.setEnabled(true);
                  String dte = "profile_" +profile.getDateTime();
                  jTextField4.setText(dte);
                  jButton6.setEnabled(false);
                jTextField1.setEnabled(false);
                jTextField2.setEnabled(false);
                jTextField5.setEnabled(false);
                jTextField6.setEnabled(false);
                jPasswordField1.setEnabled(false);


        
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        if (isRunning == true)
            JOptionPane.showMessageDialog(null, "Mongodb profiler is running. Please stopt it & continue you task again !", "Mongodb Profile is running ",JOptionPane.INFORMATION_MESSAGE);
        else
        {
        
        ProfilePara prfpara = new ProfilePara();
        prfpara.LoadDBList();
        prfpara.setLocationRelativeTo(null);
        prfpara.setVisible(true);
        }
        

            
   
            
            
            

            


                

        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if( jCheckBox1.isSelected())
        {
        jTextField5.setEnabled(true);
        jTextField6.setEnabled(true);
        jPasswordField1.setEnabled(true);
        jPasswordField1.removeAll();
        }
        else
        {
        jTextField5.setEnabled(false);
        jTextField6.setEnabled(false);
        jPasswordField1.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    
//       public static MongoClient getConnection()
//      {
//          return mongo;
//      }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfilerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfilerGUI().setVisible(true);
            }
            
            
        });
        
     
        
       
        

  }
  
        
        
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
    
    
    public  MongoClient mongo = null;
    public List <String>  dbList = null;
    public int profilerLevel = 2;
    public int slowness = 100;
    public static  List dbs = null;
    public static  String IPAddress  = "";
    public static int PortNo =0;
    public static String UserName ="";
    public static String Password ="";
    public static String DefaultDB ="admin";
    public static boolean isAuth = false;
    public static boolean isRunning = false ;
    Globle gbl= new Globle ();
    
    

    
    
    Profiler profile = new Profiler();
    LogWriter log = new LogWriter();
    ItemListener itemListener = new ItemListener(){
        public void itemStateChanged(ItemEvent itemEvent){
            int state = itemEvent.getStateChange();
           
            
        }
    };
}
